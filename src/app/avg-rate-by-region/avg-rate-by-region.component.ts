import {Component, OnInit} from '@angular/core';
import {CountryService} from "../country.service";

@Component({
  selector: 'app-avg-rate-by-region',
  templateUrl: './avg-rate-by-region.component.html',
  styleUrls: ['./avg-rate-by-region.component.css']
})
export class AvgRateByRegionComponent implements OnInit{
  movies:any[]=[]
  options:any;
  constructor(private movieService :CountryService) {}
  ngOnInit() {this.movieService.avg_rate_by_region().subscribe((data:any[])=>{
    this.movies = data;
    console.log(this.movies)});
    this.options = {
      title: {
        text: '不同地区电影评分趋势对比',
        left:'center',
      },
      tooltip: {
        trigger: 'axis'
      },
      legend: {
        data: ['华语总','大陆地区','香港地区','台湾地区'],
        left:'right'
      },
      grid: {
        left: '3%',
        right: '4%',
        bottom: '3%',
        containLabel: true
      },
      toolbox: {
        feature: {
          saveAsImage: {}
        }
      },
      xAxis: {
        type: 'category',
        boundaryGap: false,
        name:'年份',
        data: [1900, 1913, 1916, 1923, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018]
      },
      yAxis: {
        type: 'value',
        name:'平均分'
      },
      series: [
        {
          name: '华语总',
          type: 'line',

          data: [ , , , 8.3, , 7.2, 7, 7.1, 6.26, 7.5, 7.85, 7.5, 7.36, 7.64, 7.4, 7.7, 7.58, 6.9, 6.67, 6.6, 7.33, 6.95, 6.8, , , , 7.07, 7.37, 7.42, 6.91, 7.57, 7.5, 7.06, 7.46, 7.34, 7.38, 7.28, 7.44, 7.46, 7.19, 6.94, 7.66, 7.32, 7.12, 6.71, 6.56, 6.49, 6.59, 6.45, 6.6, 6.4, 6.39, 6.33, 6.34, 6.38, 6.45, 6.37, 6.51, 6.77, 6.76, 6.73, 6.72, 6.98, 6.9, 6.79, 6.76, 6.86, 6.66, 6.57, 6.71, 6.55, 6.65, 6.59, 6.79, 6.84, 6.88, 6.98, 6.66, 6.52, 6.41, 6.41, 6.28, 6.38, 6.33, 6.27, 6.31, 6.19, 6.22, 6.15, 5.92, 5.59, 5.56, 5.04, 4.91, 4.85, 4.66, 4.92, 5.23],
        },
        {
          name: '大陆地区',
          type: 'line',

          data: [ , , , 8.3, , 7.2, 7, 7.1, 6.26, 7.5, 7.85, 7.5, 7.36, 7.64, 7.6, 7.7, 7.58, 6.93, 6.75, 6.6, 7.33, 6.95, 6.8, , , , 7.42, 7.85, 7.34, 6.93, 7.44, 7.48, 6.95, 7.55, 7.27, 7.39, 7.32, 7.54, 7.22, 7.13, 7.21, 7.99, 7.7, 7.32, 6.75, 7.2, , , , 6.6, 7.67, 6.63, 6.15, 6.38, 6.45, 6.22, 5.9, 7, 7.12, 7.16, 7.07, 7.56, 7.44, 7.48, 7.11, 7.06, 7.11, 6.83, 6.6, 7.09, 6.62, 7.1, 7.01, 7.05, 7.06, 6.89, 7.17, 7.28, 6.71, 6.93, 6.84, 6.57, 6.7, 6.51, 6.43, 6.33, 6.33, 6.17, 6.02, 5.84, 5.46, 5.46, 4.85, 4.82, 4.72, 4.55, 4.79, 5.15]
        },
        {
          name: '香港地区',
          type: 'line',

          data: [, , , , , , , , , , , , , , 6.6, , , 6.8, 6.5, , , , , , , , 6.37, 6.65, 7.63, 6.88, 8.2, 7.6, 7.13, 7.38, 7.08, 7.37, 7.24, 7.07, 7.79, 7.22, 6.66, 7.13, 6.92, 7.02, 6.75, 6.47, 6.45, 6.52, 6.39, 6.51, 6.25, 6.36, 6.28, 6.34, 6.46, 6.49, 6.43, 6.53, 6.61, 6.55, 6.58, 6.56, 6.72, 6.61, 6.53, 6.56, 6.69, 6.57, 6.52, 6.53, 6.5, 6.48, 6.5, 6.69, 6.81, 6.82, 6.86, 6.4, 6.34, 6.08, 6.21, 6.03, 6.01, 6.13, 5.99, 6.22, 6.06, 6.14, 6.14, 6.04, 5.45, 5.77, 5.69, 5.39, 5.59, 5.5, 5.49, 5.35]
        },
        {
          name: '台湾地区',
          type: 'line',

          data: [, , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , 7.7, , , 6.2, , 6.56, 7.4, 7.1, 7.1, 6.8, 7.04, 6.82, 6.3, 6.78, 6.3, 6.29, 6.33, 6.41, 6.25, 6.77, 6.89, 6.82, 6.25, 7.59, 7.42, 7.15, 7.13, 7, 6.75, 7.2, 7.44, 7.36, 7.12, 6.6, 7.5, 6.98, 7.48, 7.31, 7.52, 6.84, 7.34, 7.39, 7.02, 6.72, 7.13, 6.45, 6.29, 6.58, 6.83, 6.53, 6.2, 6.76, 6.36, 6.28, 6.2, 5.95, 5.59, 6.01, 6.48]
        }
      ]
    };
  }
}
